analytic

# lambert_diffuse.brdf
#
# AUTHOR: Gregory Igehy

# variables go here...
# only floats supported right now.
# [type] [name] [min val] [max val] [default val]

::begin parameters
color base_color  1.0 1.0 1.0
::end parameters


# Then comes the shader. This should be GLSL code
# that defines a function called BRDF (although you can
# add whatever other functions you want too). 

::begin shader

const float INV_MATH_PI            = 0.31830988618379067153776752674503;

vec3 BRDF( vec3 L, vec3 V, vec3 N, vec3 X, vec3 Y )
{
    float dot_n_l      = max( dot( N, L ), 0.0 );

    vec3 diffuse_brdf  = INV_MATH_PI * base_color;
    diffuse_brdf      *= ( dot_n_l > 0.0 ) ? 1.0 : 0.0;

    return diffuse_brdf;
}

::end shader
